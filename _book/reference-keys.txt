eq:scalarNetworkEquation
eq:scalarVoxelEquation
eq:networkNoise
eq:voxelNoise
eq:stackedNetworkEquation
eq:stackedVoxelEquation
eq:networkPrior
eq:voxelkPrior
eq:horseshoeLambda
eq:horseshoeSigma
eq:horseshoeKappaLambda
eq:horseshoeKappaSigma
eq:horseshoePhi
eq:horseshoeEta
eq:horseshoeKappaPhi
eq:horseshoeKappaEta
about
package-description
package-requierments
package-installation
document-structure
modelFramework
posteriorComputation
fullConditionalPsiA
fullConditionalPsiG
full-conditional-for-xi_p-boldsymbol-theta-_-pp-and-boldsymbol-beta-_p
full-conditional-for-tau2_theta
full-conditional-for-tau2_beta
full-conditional-nu
full-conditional-for-the-horseshoe-structure
functions
bmrr_sampler
desription
inputs
output
walkthrough
problem-dimensions
creates-auxiliary-variables
sample-holders
initialization
progress-bar
first-run
sampling
saves-the-samples
saves-the-state
returns-values
bmrr_iterator
description
inputs-1
output-1
walkthrough-1
problem-dimensions-1
samples-dt
samples-dt-1
creates-dt-db-and-d
samples-g-theta-and-b
updates-nu
horseshoe-structure-for-theta
samples-l2t
samples-t2t
samples-vt
samples-xit
horseshoe-structure-for-b
samples-l2b
samples-t2b
samples-vb
samples-xib
samples-st2-and-sb2
samples-st2
samples-sb2
group_iterator
description-1
inputs-2
output-2
walktrhough
checks-if-there-are-elements-in-the-symmetric-network
computes-the-log-odds
computes-the-probability
updates-g
updates-theta-and-b
returns-values-1
